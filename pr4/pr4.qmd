---
title: "Лабораторная работа №4. Исследование метаданных DNS трафика"
format:   
  md:
    output-file: README.md
editor_options: 
  chunk_output_type: inline
---

## Цель работы

1. Закрепить практические навыки использования языка программирования R для обработки данных
2. Закрепить знания основных функций обработки данных экосистемы tidyverse языка R
3. Закрепить навыки исследования метаданных DNS трафика

## Исходные данные

-   Windows 10
-   RStudio

## Ход работы

Устанавливаем пакеты *dplyr*, *tidyr*, *httr* и *tidyverse* для последующей работы
```{r}
library(dplyr)
library(tidyr)
library(tidyverse)
library(httr)
```
 
Встраиваем названия столбцов из header.csv в dng.log
```{r}
data <- read.csv("dns.log", sep="\t", header=FALSE)
header <- read.csv("header.csv")
colnames(data) <- header[,1]
```
### Сколько участников информационного обмена в сети Доброй Организации?
```{r}
result <- data %>%
  select(id1_orig, id3_host) %>%
  gather(key = "id", value = "IP") %>%
  count(IP, sort = TRUE) %>%
  head(10)
result
```


### Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?
```{r}
kResponse <- data %>%
  filter(data$QR == TRUE) %>%
  summarise(k = n())
kResponse/nrow(data)
```

### Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность
```{r}
result <- data %>%
  select(id1_orig, id3_host) %>%
  gather(key = "id", value = "IP") %>%
  count(IP, sort = TRUE) %>%
  head(10)
result
```

### Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений
```{r}
domain_counts <- data %>%
  group_by(query) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  head(10)
domain_counts
```

### Опеределите базовые статистические характеристики (функция summary()) интервала времени между последовательным обращениями к топ-10 доменам
```{r}
# данные только для 10 популярных доменов
topQuery <- data %>%
  filter(query %in% domain_counts$query)
# интервалы между последовательными обращениями
intervals <- topQuery %>%
  arrange(query, ts) %>%
  group_by(query) %>%
  mutate(time_interval = ts - lag(ts))

summary(intervals$time_interval)
```


### Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

```{r}
dns_queries <- data %>%
  filter(!data$QR)

repeated_ips <- dns_queries %>%
  group_by(id3_host) %>%
  summarise(times = n()) %>%
  filter(times > 1) %>%
  arrange(desc(times)) %>%
  distinct() %>%
  filter(times > 1000)
  
repeated_ips
```

### Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого можно использовать сторонние сервисы, например https://v4.ifconfig.co/
```{r}
domainV <- c(domain_counts$query)
top_domains <- domainV

# ищем через nslookup доменные записи из нашего вектора
top_dns <- c("teredo.ipv6.microsoft.com",
             "64.233.165.138",
             "95.101.144.198",
             "17.253.38.125",
             "64.233.162.101",
             "*\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
             "WPAD",
             "44.206.168.192.in-addr.arpa",
             "HPE8AA67",
             "ISATAP")
```

```{r}
get_location_info <- function(domain) {
  url <- paste0("https://ipinfo.io/", domain, "/json")
  response <- tryCatch(GET(url), error = function(e) e)
  
  if (!inherits(response, "error") && http_type(response) == "application/json") {
    content <- content(response, as = "parsed")
    if (!is.null(content$country) && !is.null(content$city) && !is.null(content$org)) {
      return(data.frame(domain = domain, country = content$country, city = content$city, org = content$org))
    } else {
      return(data.frame(domain = domain, country = NA, city = NA, org = NA))
    }
  } else {
    return(data.frame(domain = domain, country = NA, city = NA, org = NA))
  }
}

location_info <- lapply(top_dns, get_location_info)
location_df <- bind_rows(location_info)
location_df
```


## Оценка результата

Задание было выполнено

## Вывод

Были развиты практические навыки использования языка программирования R для обработки данных
